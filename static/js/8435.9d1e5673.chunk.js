"use strict";(self.webpackChunkn2_viaduct=self.webpackChunkn2_viaduct||[]).push([[8435],{98435:(t,e,r)=>{r.r(e),r.d(e,{default:()=>F});var o=r(9236),i=r(27366),s=(r(59486),r(10064)),n=r(66978),a=r(35995),l=r(49861),u=r(93169),p=(r(32718),r(84936),r(38511)),c=r(69912),d=r(64326),y=r(54472),h=r(70431),v=r(49818),m=r(53866);let g=class extends y.Z{constructor(t){super(t),this.type="csv",this.refresh=(0,n.Ds)((async t=>{await this.load();const{extent:e,timeExtent:r}=await this._connection.invoke("refresh",t);return e&&(this.sourceJSON.extent=e),r&&(this.sourceJSON.timeInfo.timeExtent=[r.start,r.end]),{dataChanged:!0,updates:{extent:this.sourceJSON.extent,timeInfo:this.sourceJSON.timeInfo}}}))}load(t){const e=null!=t?t.signal:null;return this.addResolvingPromise(this._startWorker(e)),Promise.resolve(this)}destroy(){var t;null!==(t=this._connection)&&void 0!==t&&t.close(),this._connection=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};await this.load(e);const r=await this._connection.invoke("queryFeatures",t?t.toJSON():null,e);return v.Z.fromJSON(r)}async queryFeaturesJSON(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return await this.load(e),this._connection.invoke("queryFeatures",t?t.toJSON():null,e)}async queryFeatureCount(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return await this.load(e),this._connection.invoke("queryFeatureCount",t?t.toJSON():null,e)}async queryObjectIds(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return await this.load(e),this._connection.invoke("queryObjectIds",t?t.toJSON():null,e)}async queryExtent(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};await this.load(e);const r=await this._connection.invoke("queryExtent",t?t.toJSON():null,e);return{count:r.count,extent:m.Z.fromJSON(r.extent)}}async querySnapping(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return await this.load(e),this._connection.invoke("querySnapping",t,e)}async _startWorker(t){this._connection=await(0,h.bA)("CSVSourceWorker",{strategy:(0,u.Z)("feature-layers-workers")?"dedicated":"local",signal:t,registryTarget:this});const{url:e,delimiter:r,fields:o,latitudeField:i,longitudeField:s,spatialReference:n,timeInfo:a}=this.loadOptions,l=await this._connection.invoke("load",{url:e,customParameters:this.customParameters,parsingOptions:{delimiter:r,fields:null===o||void 0===o?void 0:o.map((t=>t.toJSON())),latitudeField:i,longitudeField:s,spatialReference:null===n||void 0===n?void 0:n.toJSON(),timeInfo:null===a||void 0===a?void 0:a.toJSON()}},{signal:t});this.locationInfo=l.locationInfo,this.sourceJSON=l.layerDefinition,this.delimiter=l.delimiter}};(0,i._)([(0,l.Cb)()],g.prototype,"type",void 0),(0,i._)([(0,l.Cb)()],g.prototype,"loadOptions",void 0),(0,i._)([(0,l.Cb)()],g.prototype,"customParameters",void 0),(0,i._)([(0,l.Cb)()],g.prototype,"locationInfo",void 0),(0,i._)([(0,l.Cb)()],g.prototype,"sourceJSON",void 0),(0,i._)([(0,l.Cb)()],g.prototype,"delimiter",void 0),g=(0,i._)([(0,c.j)("esri.layers.graphics.sources.CSVSource")],g);var f=r(61040),b=r(21149),S=r(53283),C=r(78952);function w(t,e){throw new s.Z(e,"CSVLayer (title: ".concat(t.title,", id: ").concat(t.id,") cannot be saved to a portal item"))}let _=class extends d.default{constructor(){super(...arguments),this.geometryType="point",this.capabilities=(0,f.MS)(!1,!1),this.delimiter=null,this.editingEnabled=!1,this.fields=null,this.latitudeField=null,this.locationType="coordinates",this.longitudeField=null,this.operationalLayerType="CSV",this.outFields=["*"],this.path=null,this.spatialReference=C.Z.WGS84,this.source=null,this.type="csv"}normalizeCtorArgs(t,e){return"string"==typeof t?(0,o.Z)({url:t},e):t}load(t){const e=null!=t?t.signal:null,r=this.loadFromPortal({supportedTypes:["CSV"],supportsData:!1},t).catch(n.r9).then((async()=>this.initLayerProperties(await this.createGraphicsSource(e))));return this.addResolvingPromise(r),Promise.resolve(this)}get isTable(){return this.loaded&&null==this.geometryType}readWebMapLabelsVisible(t,e){var r;return null!=e.showLabels?e.showLabels:!(null===(r=e.layerDefinition)||void 0===r||null===(r=r.drawingInfo)||void 0===r||!r.labelingInfo)}set url(t){if(!t)return void this._set("url",t);const e=(0,a.mN)(t);this._set("url",e.path),e.query&&(this.customParameters=(0,o.Z)((0,o.Z)({},this.customParameters),e.query))}async createGraphicsSource(t){var e,r,o,i,s;const n=new g({loadOptions:{delimiter:this.delimiter,fields:this.fields,latitudeField:null!==(e=this.latitudeField)&&void 0!==e?e:void 0,longitudeField:null!==(r=this.longitudeField)&&void 0!==r?r:void 0,spatialReference:null!==(o=this.spatialReference)&&void 0!==o?o:void 0,timeInfo:null!==(i=this.timeInfo)&&void 0!==i?i:void 0,url:this.url},customParameters:null!==(s=this.customParameters)&&void 0!==s?s:void 0});return this._set("source",n),await n.load({signal:t}),this.read({locationInfo:n.locationInfo,columnDelimiter:n.delimiter},{origin:"service",url:this.parsedUrl}),n}queryFeatures(t,e){return this.load().then((()=>this.source.queryFeatures(b.Z.from(t)||this.createQuery()))).then((t=>{if(null!==t&&void 0!==t&&t.features)for(const e of t.features)e.layer=e.sourceLayer=this;return t}))}queryObjectIds(t,e){return this.load().then((()=>this.source.queryObjectIds(b.Z.from(t)||this.createQuery())))}queryFeatureCount(t,e){return this.load().then((()=>this.source.queryFeatureCount(b.Z.from(t)||this.createQuery())))}queryExtent(t,e){return this.load().then((()=>this.source.queryExtent(b.Z.from(t)||this.createQuery())))}read(t,e){super.read(t,e),e&&"service"===e.origin&&this.revert(["latitudeField","longitudeField"],"service")}write(t,e){return super.write(t,(0,o.Z)((0,o.Z)({},e),{},{writeLayerSchema:!0}))}clone(){throw new s.Z("csv-layer:clone","CSVLayer (title: ".concat(this.title,", id: ").concat(this.id,") cannot be cloned"))}async save(t){return w(this,"csv-layer:save")}async saveAs(t,e){return w(this,"csv-layer:save-as")}async hasDataChanged(){try{const{dataChanged:t,updates:e}=await this.source.refresh(this.customParameters);return null!=e&&this.read(e,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),t}catch(t){}return!1}_verifyFields(){}_verifySource(){}_hasMemorySource(){return!1}};(0,i._)([(0,l.Cb)({readOnly:!0,json:{read:!1,write:!1}})],_.prototype,"capabilities",void 0),(0,i._)([(0,l.Cb)({type:[","," ",";","|","\t"],json:{read:{source:"columnDelimiter"},write:{target:"columnDelimiter",ignoreOrigin:!0}}})],_.prototype,"delimiter",void 0),(0,i._)([(0,l.Cb)({readOnly:!0,type:Boolean,json:{origins:{"web-scene":{read:!1,write:!1}}}})],_.prototype,"editingEnabled",void 0),(0,i._)([(0,l.Cb)({json:{read:{source:"layerDefinition.fields"},write:{target:"layerDefinition.fields"}}})],_.prototype,"fields",void 0),(0,i._)([(0,l.Cb)({type:Boolean,readOnly:!0})],_.prototype,"isTable",null),(0,i._)([(0,p.r)("web-map","labelsVisible",["layerDefinition.drawingInfo.labelingInfo","showLabels"])],_.prototype,"readWebMapLabelsVisible",null),(0,i._)([(0,l.Cb)({type:String,json:{read:{source:"locationInfo.latitudeFieldName"},write:{target:"locationInfo.latitudeFieldName",ignoreOrigin:!0}}})],_.prototype,"latitudeField",void 0),(0,i._)([(0,l.Cb)({type:["show","hide"]})],_.prototype,"listMode",void 0),(0,i._)([(0,l.Cb)({type:["coordinates"],json:{read:{source:"locationInfo.locationType"},write:{target:"locationInfo.locationType",ignoreOrigin:!0,isRequired:!0}}})],_.prototype,"locationType",void 0),(0,i._)([(0,l.Cb)({type:String,json:{read:{source:"locationInfo.longitudeFieldName"},write:{target:"locationInfo.longitudeFieldName",ignoreOrigin:!0}}})],_.prototype,"longitudeField",void 0),(0,i._)([(0,l.Cb)({type:["CSV"]})],_.prototype,"operationalLayerType",void 0),(0,i._)([(0,l.Cb)()],_.prototype,"outFields",void 0),(0,i._)([(0,l.Cb)({type:String,json:{origins:{"web-scene":{read:!1,write:!1}},read:!1,write:!1}})],_.prototype,"path",void 0),(0,i._)([(0,l.Cb)({json:{read:!1},cast:null,type:g,readOnly:!0})],_.prototype,"source",void 0),(0,i._)([(0,l.Cb)({json:{read:!1},value:"csv",readOnly:!0})],_.prototype,"type",void 0),(0,i._)([(0,l.Cb)({json:{read:S.r,write:{isRequired:!0,ignoreOrigin:!0,writer:S.w}}})],_.prototype,"url",null),_=(0,i._)([(0,c.j)("esri.layers.CSVLayer")],_);const F=_},60480:(t,e,r)=>{r.d(e,{g:()=>o});const o={supportsStatistics:!0,supportsPercentileStatistics:!0,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsCentroid:!0,supportsCacheHint:!0,supportsDistance:!0,supportsDistinct:!0,supportsExtent:!0,supportsGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQuantization:!0,supportsQuantizationEditMode:!1,supportsQueryGeometry:!0,supportsResultType:!0,supportsSqlExpression:!0,supportsMaxRecordCountFactor:!1,supportsStandardizedQueriesOnly:!0,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!0,supportsQueryByOthers:!0,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!0,supportsDefaultSpatialReference:!1,supportsFullTextSearch:!1,supportsCompactGeometry:!1,maxRecordCountFactor:void 0,maxRecordCount:void 0,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}},61040:(t,e,r)=>{r.d(e,{Dm:()=>d,Hq:()=>h,MS:()=>v,bU:()=>u});var o=r(9236),i=r(93169),s=r(84652),n=r(60480),a=r(96978),l=r(76115);function u(t){return{renderer:{type:"simple",symbol:"esriGeometryPoint"===t||"esriGeometryMultipoint"===t?l.I4:"esriGeometryPolyline"===t?l.ET:l.lF}}}const p=/^[_$a-zA-Z][_$a-zA-Z0-9]*$/;let c=1;function d(t,e){if((0,i.Z)("esri-csp-restrictions"))return()=>(0,o.Z)({[e]:null},t);try{let r="this".concat(y(e)," = null;");for(const e in t)r+="this".concat(y(e)," = ").concat(JSON.stringify(t[e]),";");const o=new Function("\n      return class AttributesClass$".concat(c++," {\n        constructor() {\n          ").concat(r,";\n        }\n      }\n    "))();return()=>new o}catch(r){return()=>(0,o.Z)({[e]:null},t)}}function y(t){return p.test(t)?".".concat(t):'["'.concat(t,'"]')}function h(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return[{name:"New Feature",description:"",prototype:{attributes:(0,s.d9)(t)}}]}function v(t,e){return{analytics:{supportsCacheHint:!1},attachment:null,data:{isVersioned:!1,isBranchVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:t},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:e,supportsDelete:e,supportsEditing:e,supportsChangeTracking:!1,supportsQuery:!0,supportsQueryBins:!1,supportsQueryAnalytics:!1,supportsQueryAttachments:!1,supportsQueryTopFeatures:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:e,supportsExceedsLimitStatistics:!0,supportsAsyncConvert3D:!1},query:n.g,queryRelated:{supportsCount:!0,supportsOrderBy:!0,supportsPagination:!0,supportsCacheHint:!1},queryTopFeatures:{supportsCacheHint:!1},queryBins:a.s,editing:{supportsGeometryUpdate:e,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateWithoutM:!1,supportsUploadWithItemId:!1,supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1,supportsAsyncApplyEdits:!1,zDefault:void 0}}}}}]);
//# sourceMappingURL=8435.9d1e5673.chunk.js.map